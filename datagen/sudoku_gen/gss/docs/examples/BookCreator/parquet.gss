<emptychar>0
<pattern>|.|
<matrix>
1 1 1 1 1 1 1 1 1
2 2 2 2 2 2 2 2 2
3 3 3 3 3 3 3 3 3
4 4 4 4 4 4 4 4 4
5 5 5 5 5 5 5 5 5
6 6 6 6 6 6 6 6 6
7 7 7 7 7 7 7 7 7
8 8 8 8 8 8 8 8 8
9 9 9 9 9 9 9 9 9

<matrix>
1 1 1 . . . 2 2 2
1 1 1 . . . 2 2 2
1 1 1 . . . 2 2 2
3 3 3 . . . 4 4 4
3 3 3 . . . 4 4 4
3 3 3 . . . 4 4 4
5 5 5 . . . 6 6 6
5 5 5 . . . 6 6 6
5 5 5 . . . 6 6 6

<matrix>
. . 1 1 1 . . . .
. . 1 1 1 . . . .
. . 1 1 1 . . . .
. . 2 2 2 . . . .
. . 2 2 2 . . . .
. . 2 2 2 . . . .
. . 3 3 3 . . . .
. . 3 3 3 . . . .
. . 3 3 3 . . . .

<matrix>
. . . . 1 1 1 . .
. . . . 1 1 1 . .
. . . . 1 1 1 . .
. . . . 2 2 2 . .
. . . . 2 2 2 . .
. . . . 2 2 2 . .
. . . . 3 3 3 . .
. . . . 3 3 3 . .
. . . . 3 3 3 . .

<matrix>
1 . 2 1 . 2 1 . 2
3 . 4 3 . 4 3 . 4
5 . 6 5 . 6 5 . 6
1 . 2 1 . 2 1 . 2
3 . 4 3 . 4 3 . 4
5 . 6 5 . 6 5 . 6
1 . 2 1 . 2 1 . 2
3 . 4 3 . 4 3 . 4
5 . 6 5 . 6 5 . 6

<matrix>
. 1 . . 1 . 1 . .
. 2 . . 2 . 2 . .
. 3 . . 3 . 3 . .
. 1 . . 1 . 1 . .
. 2 . . 2 . 2 . .
. 3 . . 3 . 3 . .
. 1 . . 1 . 1 . .
. 2 . . 2 . 2 . .
. 3 . . 3 . 3 . .

<matrix>
. . 1 . 1 . . 1 .
. . 2 . 2 . . 2 .
. . 3 . 3 . . 3 .
. . 1 . 1 . . 1 .
. . 2 . 2 . . 2 .
. . 3 . 3 . . 3 .
. . 1 . 1 . . 1 .
. . 2 . 2 . . 2 .
. . 3 . 3 . . 3 .

<sudoku>
size(12cm);
int n = 3;
int N = n*n;
int[] f={|.|,|.|,|.|,|.|,|1|,|.|,|.|,|.|,|.|,
		 |.|,|3|,|.|,|.|,|.|,|.|,|.|,|.|,|8|,
		 |6|,|.|,|.|,|3|,|.|,|.|,|.|,|.|,|.|,
		 |.|,|9|,|.|,|.|,|.|,|.|,|.|,|.|,|.|,
		 |.|,|.|,|.|,|.|,|.|,|.|,|8|,|.|,|2|,
		 |.|,|.|,|.|,|.|,|4|,|.|,|5|,|9|,|.|,
		 |.|,|.|,|.|,|.|,|8|,|.|,|.|,|.|,|.|,
		 |.|,|.|,|.|,|.|,|.|,|.|,|.|,|.|,|5|,
		 |1|,|.|,|.|,|.|,|.|,|.|,|.|,|2|,|.|};
path cell = box((0,0),(1,1));
path supercell = box((0,0),(4,4));
path ccell = box((0,0),(2,2));
path ucell = (0,0) -- (1,0) -- (1,1) -- (2,1) -- (2,2) -- (0,2) -- cycle;
path dcell = (0,0) -- (2,0) -- (2,2) -- (1,2) -- (1,1) -- (0,1) -- cycle;

int k=0;
int x;
int y;
for (int j=0;j<3;++j) {
	for (int i=0;i<3;++i) {
		x=i*4;
		y=j*4;		
		draw(shift(x, y)*cell, black+linewidth(0.5pt));
		if (f[k]>0)
			label(string(f[k]),p = fontsize(20pt), (x+0.5,y+0.5));
		k=k+1;
		
		x=x+1;
		draw(shift(x, y)*cell, black+linewidth(0.5pt));
		if (f[k]>0)
			label(string(f[k]),p = fontsize(20pt), (x+0.5,y+0.5));
		k=k+1;
		
		x=x+1;
		fill(shift(x, y)*dcell, lightgrey);
		draw(shift(x, y)*dcell, black+linewidth(0.5pt));
		if (f[k]>0)
			label(string(f[k]),p = fontsize(20pt), (x+1.5,y+0.5));
		k=k+1;
		
		x=i*4;
		y=y+1;			
		draw(shift(x, y)*cell, black+linewidth(0.5pt));
		if (f[k]>0)
			label(string(f[k]),p = fontsize(20pt), (x+0.5,y+0.5));
		k=k+1;
		
		x=x+1;		
		fill(shift(x, y)*ccell, mediumgrey);
		draw(shift(x, y)*ccell, black+linewidth(0.5pt));
		if (f[k]>0)
			label(string(f[k]),p = fontsize(20pt), (x+1,y+1));
		k=k+1;
		
		x=x+2;	
		y=y+1;		
		draw(shift(x, y)*cell, black+linewidth(0.5pt));
		if (f[k]>0)
			label(string(f[k]),p = fontsize(20pt), (x+0.5,y+0.5));
		k=k+1;
		
		x=i*4;		
		fill(shift(x, y)*ucell, lightgrey);
		draw(shift(x, y)*ucell, black+linewidth(0.5pt));
		if (f[k]>0)
			label(string(f[k]),p = fontsize(20pt), (x+0.5,y+1.5));
		k=k+1;
		
		
		x=x+2;
		y=y+1;
		draw(shift(x, y)*cell, black+linewidth(0.5pt));
		if (f[k]>0)
			label(string(f[k]),p = fontsize(20pt), (x+0.5,y+0.5));
		k=k+1;
		
		x=x+1;
		draw(shift(x, y)*cell, black+linewidth(0.5pt));
		if (f[k]>0)
			label(string(f[k]),p = fontsize(20pt), (x+0.5,y+0.5));
		k=k+1;
	}
}

for (int i=0;i<3;++i) {
	for (int j=0;j<3;++j) {	
		draw(shift(4*i, 4*j)*supercell, black+linewidth(2pt));
	}
}

